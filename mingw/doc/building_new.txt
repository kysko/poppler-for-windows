BUILDING Poppler for Windows with Mingw/MSYS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1. Preresequities
1.1. MINGW and MSYS (could be installed with installer "mingw-get-setup.exe", http://sourceforge.net/projects/mingw/?source=directory)
    Select "Basic Setup", then select:
    [*] mingw32-base
    [*] mingw32-gcc-g++
    [*] msys-base
    Also, install "msys-patch" package (?)
1.2. msysgit (http://msysgit.github.io/)
1.3. Qt 4.8.5 mingw (http://download.qt-project.org/official_releases/qt/4.8/4.8.5/qt-win-opensource-4.8.5-mingw.exe)
1.4. CMake 2.8+ (http://www.cmake.org/cmake/resources/software.html)


Do we need "WITH_Cairo" build?
if yes, we need to set FONT_CONFIGURATION=fontconfig ? (because of cairo depends on fontconfig and 

2. Collecting build-time dependencies
2.1 

1.1  define variable POPPLER_SRC that will point to directory with poppler 

Inside archive you can find following directory structure:
  src - for poppler sources
  deps - for unpacked build dependencies
  arch - for downloaded archives 
    (build-time and run-time dependencies aka dev and bin packages)
  deps_runtime - for unpacked runtime dependencies

1. Assuming that you already have development environment installed:
  - MingW (I used zip archive from http://get.qt.nokia.com/misc/MinGW-gcc440_1.zip)
  - Qt libraries (I used 4.7.3, http://get.qt.nokia.com/qt/source/qt-win-opensource-4.7.3-mingw.exe)
    intalled into c:\qt\4.7.3-mingw
  - MSYS (needed for building lcms)
  - utils such wget, patch, diff, etc.  Must be in folder that in PATH variable.
  - CMake (http://www.cmake.org/files/v2.8/cmake-2.8.6-win32-x86.exe)

2. Unpack archive into some directory. My was c:\dev\poppler_build

3. Build script should download, unpack, patch and build all dependencies.

4. Edit build.bat to set variables:
   - TOP - directory where you unpacked archive including msvc or mingw subdirs
   - QT_BIN - directory where Qt binaries installed

5. Run build.bat and wait some time until script finished.
  
6. After successfull build, files will be places into %TOP%\build directory
   
7. Runtime dependencies should be copied automatically by into %TOP%\build\bin by build script.

That's all  
